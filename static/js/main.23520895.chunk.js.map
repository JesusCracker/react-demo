{"version":3,"sources":["store/configureStore.js","constants/index.js","actions/index.js","components/User.js","components/Add.js","index.js","reducers/counter.js","reducers/user.js","reducers/index.js","store/configureStore.prod.js"],"names":["module","exports","require","INCREMENT","DECREMENT","LOAD_USER","LOAD_USER_FULFILLED","LOAD_USER_REJECTED","LOAD_USER_PENDING","increment","type","types","payload","Promise","resolve","reject","setTimeout","decrement","get_user","promise","axios","get","User","this","props","userInfo","isFetching","error","user","console","dir","showData","email","className","onClick","Component","connect","state","dispatch","bindActionCreators","Add","counter","store","configureStore","Index","React","ReactDom","render","document","getElementById","action","initState","data","results","response","rootReducers","combineReducers","preloadState","createStore","applyMiddleware","thunk"],"mappings":"oFACIA,EAAOC,QAAQC,EAAQ,K,mECD3B,gMAAO,IAAMC,EAAU,YACVC,EAAU,YAQVC,EAAU,YACVC,EAAoB,sBACpBC,EAAmB,qBACnBC,EAAkB,qB,uRCRlBC,EAAY,WAOrB,MAAO,CACHC,KAAKC,IACLC,QAAQ,IAAIC,QAAQ,SAACC,EAASC,GAC1BC,WAAW,WACPF,EAAQ,aAMXG,EAAY,WACrB,MAAO,CACHP,KAAMC,MA6CDO,EAAS,WAClB,MAAO,CACHR,KAAKL,IACLO,QAAQ,CACJO,QAAQC,IAAMC,IAAI,iC,OCnExBC,E,iLACQ,IACCJ,EAAUK,KAAKC,MAAfN,SADF,EAEyBK,KAAKC,MAAMC,SAAlCC,EAFF,EAEEA,WAAWC,EAFb,EAEaA,MAAMC,EAFnB,EAEmBA,KAExBC,QAAQC,IAAIF,GAEZ,IAAIG,EAAS,GASb,OARGL,EACCK,EAAS,aACJJ,EACLI,EAASJ,EACJC,IACLG,EAASH,EAAKI,OAId,yBAAMC,UAAU,eACb,4BAAKF,GACJ,4BAAQG,QAAShB,EAAUe,UAAU,mBAArC,uB,GAnBGE,aAmCJC,cAXS,SAACC,GAErB,MAAO,CACHZ,SAAUY,EAAMT,OAIG,SAACU,GACxB,OAAOC,YAAmB,CAACrB,YAAYoB,IAG5BF,CAA4Cd,GClCrDkB,E,iLACQ,IAAD,EACuBjB,KAAKC,MAA1Bf,EADF,EACEA,UAAUQ,EADZ,EACYA,UAEjB,OACI,yBAAKgB,UAAU,eACX,4BAAKV,KAAKC,MAAMiB,SAChB,4BAAQP,QAASzB,EAAYwB,UAAU,mBAAvC,YACA,4BAAQC,QAASjB,EAAWgB,UAAU,kBAAtC,YACA,kBAAC,EAAD,W,GATEE,aA2BHC,cAZS,SAACC,GACrB,MAAO,CACHI,QAASJ,EAAMI,UAII,SAACH,GACxB,OAAOC,YAAmB5B,EAAQ2B,IAKvBF,CAA4CI,G,gBCRrDE,E,MAAQC,KAGRC,E,YACF,WAAYpB,GAAQ,IAAD,8BACf,4CAAMA,KAEDa,MAAQ,GAHE,E,sEASf,OACI,6BACI,kBAAC,EAAD,W,GAZIQ,IAAMV,WAqBtBW,IAASC,OAAO,kBAAC,IAAD,CAAUL,MAAOA,GAC7B,6BACI,kBAAC,EAAD,QAEMM,SAASC,eAAe,U,kDCxC3BR,EAbC,WAA8B,IAA7BJ,EAA4B,uDAApB,EAAIa,EAAgB,uDAAP,GAClC,OAAQA,EAAOxC,MACX,IAAK,YAED,OAAO2B,EAAQ,EACnB,IAAK,YACD,OAAOA,EAAQ,EAEnB,QACI,OAAOA,I,OCPbc,EAAU,CACZzB,YAAW,EACXC,MAAM,KACNC,KAAK,IA8BMA,EA1BF,WAAwC,IAAvCS,EAAsC,uDAA9B,CAACc,aAAaD,EAAgB,uDAAP,GACzC,OAAQA,EAAOxC,MACX,KAAKJ,IAED,MAAO,CACHoB,YAAW,EACXC,MAAM,KACNC,KAAMsB,EAAOtC,QAAQwC,KAAKC,QAAQ,IAE1C,KAAK7C,IACD,MAAO,CACHkB,YAAY,EACZC,MAAO,KACPC,KAAM,IAEd,KAAKrB,IACD,MAAO,CACHmB,YAAY,EACZC,MAAOuB,EAAOtC,QAAQ0C,SAASF,KAC/BxB,KAAM,IAEd,QACI,OAAOS,ICvBHkB,EAJIC,YAAgB,CAChCf,UACAb,S,gBCSWe,UAVM,SAACc,GAOlB,OANYC,YACRH,EACAE,EACAE,YAAgBC,IAAMzC,S","file":"static/js/main.23520895.chunk.js","sourcesContent":["if(process.env.NODE_ENV==='production'){\r\n    module.exports=require('./configureStore.prod')\r\n}else{\r\n    module.exports=require('./configureStore.dev');\r\n}\r\n\r\n\r\n","export const INCREMENT='INCREMENT';\r\nexport const DECREMENT='DECREMENT';\r\n\r\n//USER\r\nexport const FETCH_USER_SUCCESS='FETCH_USER_SUCCESS';\r\nexport const FETCH_USER_REQUEST='FETCH_USER_REQUEST';\r\nexport const FETCH_USER_FAILURE='FETCH_USER_FAILURE';\r\n\r\n//USER PROMISE\r\nexport const LOAD_USER='LOAD_USER';\r\nexport const LOAD_USER_FULFILLED='LOAD_USER_FULFILLED';\r\nexport const LOAD_USER_REJECTED='LOAD_USER_REJECTED';\r\nexport const LOAD_USER_PENDING='LOAD_USER_PENDING';","import * as types from '../constants/index'\r\nimport axios from 'axios'\r\nimport { LOAD_USER } from \"../constants/index\";\r\n\r\nexport const increment = () => {\r\n    /*    return dispatch => {\r\n            setTimeout(() => {\r\n                dispatch({type: types.INCREMENT})\r\n\r\n            } , 3000);\r\n        }*/\r\n    return {\r\n        type:types.INCREMENT,\r\n        payload:new Promise((resolve ,reject)=>{\r\n            setTimeout(()=>{\r\n                resolve('xxx');\r\n            })\r\n        })\r\n    }\r\n};\r\n\r\nexport const decrement = () => {\r\n    return {\r\n        type: types.DECREMENT\r\n    }\r\n};\r\n/*\r\n\r\nexport const get_user = () => {\r\n    /!* return dispatch => {\r\n         dispatch(fetch_user_request());\r\n         axios.get('https://randomuser.me/api/').then(res => {\r\n             // console.log(res.data.results[0])\r\n             dispatch(fetch_user(res.data.results[0]))\r\n         })\r\n             .catch(error => {\r\n                 dispatch(fetch_user_failure(error.response.data))\r\n             })\r\n     }*!/\r\n    return {\r\n        type: types.LOAD_USER ,\r\n        payload: {\r\n            promise: axios.get('https://randomuser.me/api')\r\n        }\r\n    }\r\n};\r\n\r\nexport const fetch_user=(user)=>{\r\n    return{\r\n        type:types.FETCH_USER_SUCCESS,\r\n        user\r\n    }\r\n}\r\n\r\nexport const fetch_user_request=()=>{\r\n    return{\r\n        type:types.FETCH_USER_REQUEST,\r\n    }\r\n}\r\n\r\nexport const fetch_user_failure=(error)=>{\r\n    return{\r\n        type:types.FETCH_USER_FAILURE,\r\n        error\r\n    }\r\n}\r\n*/\r\n\r\nexport const get_user=()=>{\r\n    return {\r\n        type:LOAD_USER,\r\n        payload:{\r\n            promise:axios.get('https://randomuser.me/api/')\r\n        }\r\n    }\r\n}\r\n","import React , { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from \"redux\";\r\nimport {get_user} from \"../actions\";\r\n\r\nclass User extends Component {\r\n    render() {\r\n        const {get_user}=this.props;\r\n        const {isFetching,error,user}=this.props.userInfo;\r\n\r\n        console.dir(user);\r\n\r\n        let showData='';\r\n        if(isFetching){\r\n            showData='Loading...'\r\n        }else if(error){\r\n            showData=error;\r\n        }else if(user){\r\n            showData=user.email;\r\n        }\r\n\r\n        return (\r\n            <div  className='text-center'>\r\n               <h3>{showData}</h3>\r\n                <button onClick={get_user} className='btn btn-success'>GET USER EMAIL</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        userInfo: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({get_user} , dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(User);","import React , { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport * as types from \"../actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport User from \"./User\";\r\n\r\nclass Add extends Component {\r\n    render() {\r\n        const {increment,decrement}=this.props;\r\n\r\n        return (\r\n            <div className='text-center'>\r\n                <h2>{this.props.counter}</h2>\r\n                <button onClick={increment}  className='btn btn-primary'>increase</button>\r\n                <button onClick={decrement} className='btn btn-danger'>decrease</button>\r\n                <User/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        counter: state.counter\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators(types , dispatch);\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Add);","import React , { Component } from 'react';\r\nimport ReactDom from 'react-dom'\r\nimport Add from './components/Add'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './store/configureStore'\r\n\r\n/*\r\nconst logger=store=>next=>action=>{\r\n    console.log('dispatching',action);\r\n    let result=next(action);\r\n    console.log('next state',store.getState());\r\n    return result;\r\n}\r\nconst error=store=>next=>action=>{\r\n    try {\r\n        next(action)\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n*/\r\n\r\nconst store = configureStore();\r\n\r\n\r\nclass Index extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n    }\r\n\r\n    render() {\r\n        // console.dir(this.props);\r\n        return (\r\n            <div>\r\n                <Add/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nIndex.propTypes = {};\r\n\r\nconst renders = () => {\r\n    ReactDom.render(<Provider store={store}>\r\n        <div>\r\n            <Index/>\r\n        </div>\r\n    </Provider> , document.getElementById('root'));\r\n\r\n}\r\nrenders();\r\nif (module.hot) {\r\n    module.hot.accept('./index' , () => {\r\n        renders();\r\n    })\r\n\r\n}\r\n\r\n// store.subscribe(renders);\r\n\r\n","const counter = (state = 2 , action = {}) => {\r\n    switch (action.type) {\r\n        case 'INCREMENT':\r\n            // throw new Error('xxxx');\r\n            return state + 1;\r\n        case 'DECREMENT':\r\n            return state - 1;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default counter;","import { LOAD_USER_FULFILLED , LOAD_USER_PENDING , LOAD_USER_REJECTED } from '../constants'\r\n\r\nconst initState={\r\n    isFetching:false,\r\n    error:null,\r\n    user:{}\r\n}\r\n\r\n\r\nconst user = (state = {initState} , action = {}) => {\r\n    switch (action.type) {\r\n        case LOAD_USER_FULFILLED:\r\n            // console.dir(action.payload.data.results[0]);\r\n            return {\r\n                isFetching:false,\r\n                error:null,\r\n                user: action.payload.data.results[0]\r\n            };\r\n        case LOAD_USER_PENDING:\r\n            return {\r\n                isFetching: true,\r\n                error: null,\r\n                user: {}\r\n            };\r\n        case LOAD_USER_REJECTED:\r\n            return {\r\n                isFetching: false,\r\n                error: action.payload.response.data,\r\n                user: {}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default user;","import counter from \"./counter\";\r\nimport user from \"./user\";\r\nimport {combineReducers} from \"redux\";\r\n\r\n const rootReducers=combineReducers({\r\n    counter,\r\n    user\r\n});\r\n export default rootReducers;","import { applyMiddleware , createStore } from \"redux\";\r\nimport rootReducers from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport promise from \"redux-promise-middleware\";\r\n\r\nconst configureStore=(preloadState)=>{\r\n    const store=createStore(\r\n        rootReducers,\r\n        preloadState,\r\n        applyMiddleware(thunk,promise)\r\n    );\r\n\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n"],"sourceRoot":""}